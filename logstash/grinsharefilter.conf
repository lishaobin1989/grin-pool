input {
  file {
    path => "/server/grin.log"
    start_position => "end"
    id => "grinshares"
  }
}

filter {
  grok {
    match => {
      "message" => [
	"(?<log_timestamp>.+) INFO (?<x>.+) Got share at height %{BASE10NUM:height}, hash (?<hash>.+)..., edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id}, difficulty %{BASE10NUM:share_difficulty}/%{BASE10NUM:net_difficulty}, submitted by (?<worker>.*)",
	"(?<log_timestamp>.+) ERROR (?<x>.+) Share at height %{BASE10NUM:height}, edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id} submitted (?<error>too late)",
	"(?<log_timestamp>.+) ERROR (?<x>.+) Share at height %{BASE10NUM:height}, hash %{BASE16NUM:hash}..., edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id} submitted (?<error>too late)",
	"(?<log_timestamp>.+) ERROR (?<x>.+) Share at height %{BASE10NUM:height}, hash %{BASE16NUM:hash}..., edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:height} rejected due to (?<error>low difficulty): %{BASE10NUM:share_difficulty}/%{BASE10NUM:net_difficulty}",
	"(?<log_timestamp>.+) ERROR (?<x>.+) (?<error>Failed to validate) solution at height %{BASE10NUM:height}, edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id}: block data not found",
	"(?<log_timestamp>.+) ERROR (?<x>.+) (?<error>Failed to validate) solution at height %{BASE10NUM:height}, hash %{BASE16NUM:hash}..., edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id}: cuckoo size too small",
	"(?<log_timestamp>.+) ERROR (?<x>.+) (?<error>Failed to validate) solution at height %{BASE10NUM:height}, hash %{BASE16NUM:hash}..., edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id}, %{BASE10NUM:share_difficulty}: %{BASE10NUM:minimum_difficulty}",
	"(?<log_timestamp>.+) ERROR (?<x>.+) (?<error>Failed to validate) share at height %{BASE10NUM:height}, hash %{BASE16NUM:hash}..., edge_bits %{BASE10NUM:edge_bits}, nonce (?<nonce>.+), job_id %{BASE10NUM:job_id}."
      ]
    }
  }

  if "_grokparsefailure" in [tags] {
    drop { }
  }

  mutate {
    add_field => {"type" => "grinshare"}
  }
}

output {
#  stdout {}

  rabbitmq {
    exchange => "shares"
    exchange_type => "direct"
    key => "grinshares"
    host => "rmq"
    user => "RMQ_USER"
    password => "RMQ_PASSWORD"
    workers => 1
    durable => true
    persistent => true
  }

}

